datasource db {
  provider = "postgresql"
  url      = env("postgressUrl")
}

generator client {
  provider = "prisma-client-js"
}

model UserInfo {
  id           String         @id @default(uuid())
  username     String?
  userImageUrl String?
  userId       String?        @unique
  email        String?        @unique
  alias        String?
  posts        Post[]         @relation("posts")
  watching     Post[]         @relation("watching")
  incomings    Conversation[] @relation("incoming")
  outgoings    Conversation[] @relation("outgoing")
  postId       String?
  createdAt    DateTime       @default(now())
}

model Post {
  id           String         @id @default(uuid())
  title        String?
  content      String?
  category     String?
  make         String?
  model        String?
  year         Int?           @default(1000)
  views        Int?           @default(0)
  watching     Int?           @default(0)
  commentss    Int?           @default(0)
  userInfoId   String?
  watchingId   String?
  UserInfo     UserInfo?      @relation("posts", fields: [userInfoId], references: [userId])
  watchers     UserInfo?      @relation("watching", fields: [watchingId], references: [id])
  comments     Comment[]
  Conversation Conversation[]
  createdAt    DateTime       @default(now())
}

model Messages {
  id             String        @id @default(uuid())
  content        String?
  sender         String?
  Conversation   Conversation? @relation(fields: [conversationId], references: [id])
  conversationId String?
  createdAt      DateTime      @default(now())

}

model Comment {
  id           String        @id @default(uuid())
  content      String?
  isOffer      Boolean       @default(false)
  postId       String?
  title        String?
  userId       String?
  userImageUrl String?
  username     String?
  Post         Post?         @relation(fields: [postId], references: [id])
  Conversation Conversation?
  createdAt    DateTime      @default(now())

}

model Conversation {

  id         String     @id @default(uuid())
  locked     Boolean    @default(false)
  userInfoId String?
  comment    Comment?   @relation(fields: [commentId], references: [id])
  post       Post?      @relation(fields: [postId], references: [id])
  messages   Messages[]
  commentId  String?
  postId     String?
  createdAt  DateTime   @default(now())
  senderId   String
  recieverId String
  newMessage String?
  reciever   UserInfo   @relation("incoming", fields: [recieverId], references: [id])
  sender     UserInfo   @relation("outgoing", fields: [senderId], references: [id])
}
